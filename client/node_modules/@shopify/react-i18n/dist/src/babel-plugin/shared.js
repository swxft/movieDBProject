"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var child_process_1 = require("child_process");
var path_1 = tslib_1.__importDefault(require("path"));
exports.TRANSLATION_DIRECTORY_NAME = 'translations';
exports.DEFAULT_FALLBACK_LOCALE = 'en';
function getLocaleIds(options) {
    var translationFilePaths = options.translationFilePaths, _a = options.fallbackLocale, fallbackLocale = _a === void 0 ? exports.DEFAULT_FALLBACK_LOCALE : _a;
    return translationFilePaths
        .map(function (filePath) { return path_1.default.basename(filePath, path_1.default.extname(filePath)); })
        .filter(function (locale) { return locale !== fallbackLocale; })
        .sort();
}
exports.getLocaleIds = getLocaleIds;
function toArrayString(stringArray) {
    return "[" + stringArray
        .map(function (singleStr) { return JSON.stringify(singleStr); })
        .join(', ') + "]";
}
exports.toArrayString = toArrayString;
function findTranslationBuckets(rootDir) {
    // `find` is used here instead of Node's glob because it performs much faster
    // (20s vs 1s in web with ~750 translation folders and 21 langs)
    var files = child_process_1.execSync("find " + rootDir + " -type d \\( -path ./node_modules -o -path ./build -o -path ./tmp -o -path ./.git -o -path ./public \\) -prune -o -name '*.json' -print | grep /" + exports.TRANSLATION_DIRECTORY_NAME + "/")
        .toString()
        .trim()
        .split('\n')
        .sort();
    return files.reduce(function (acc, translationPath) {
        var translationsDir = path_1.default.dirname(translationPath);
        if (!acc[translationsDir]) {
            acc[translationsDir] = [];
        }
        acc[translationsDir].push(translationPath);
        return acc;
    }, {});
}
exports.findTranslationBuckets = findTranslationBuckets;
