"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = require("react");
var apollo_client_1 = tslib_1.__importDefault(require("./apollo-client"));
function useMutation(mutation, options) {
    if (options === void 0) { options = {}; }
    var overrideClient = options.client, variables = options.variables, optimisticResponse = options.optimisticResponse, refetchQueries = options.refetchQueries, awaitRefetchQueries = options.awaitRefetchQueries, update = options.update, context = options.context, fetchPolicy = options.fetchPolicy;
    var client = apollo_client_1.default(overrideClient);
    var runMutation = react_1.useCallback(function (perMutationOptions) {
        if (perMutationOptions === void 0) { perMutationOptions = {}; }
        var mutateVariables = tslib_1.__assign(tslib_1.__assign({}, (variables || {})), (perMutationOptions.variables || {}));
        delete perMutationOptions.variables;
        return client.mutate(tslib_1.__assign({ mutation: mutation, variables: mutateVariables, optimisticResponse: optimisticResponse,
            refetchQueries: refetchQueries,
            awaitRefetchQueries: awaitRefetchQueries,
            update: update,
            context: context,
            fetchPolicy: fetchPolicy }, perMutationOptions));
    }, 
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [
        client,
        mutation,
        refetchQueries,
        awaitRefetchQueries,
        update,
        context,
        fetchPolicy,
        // eslint-disable-next-line react-hooks/exhaustive-deps
        JSON.stringify(variables),
        // eslint-disable-next-line react-hooks/exhaustive-deps
        JSON.stringify(optimisticResponse),
    ]);
    return runMutation;
}
exports.default = useMutation;
