"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = require("react");
var react_hooks_1 = require("@shopify/react-hooks");
var react_async_1 = require("@shopify/react-async");
function useGraphQLDocument(documentOrAsyncDocument) {
    var _this = this;
    var _a = tslib_1.__read(react_1.useState(function () {
        if (isDocumentNode(documentOrAsyncDocument)) {
            return documentOrAsyncDocument;
        }
        else {
            return documentOrAsyncDocument.resolver.resolved;
        }
    }), 2), document = _a[0], setDocument = _a[1];
    var mounted = react_hooks_1.useMountedRef();
    var loadDocument = react_1.useCallback(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
        var resolved, error_1;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!!isDocumentNode(documentOrAsyncDocument)) return [3 /*break*/, 4];
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, documentOrAsyncDocument.resolver.resolve()];
                case 2:
                    resolved = _a.sent();
                    if (mounted.current) {
                        setDocument(resolved);
                    }
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    throw Error('error loading GraphQL document');
                case 4: return [2 /*return*/];
            }
        });
    }); }, [documentOrAsyncDocument, mounted]);
    react_1.useEffect(function () {
        if (!document) {
            loadDocument();
        }
    }, [document, loadDocument]);
    react_async_1.useAsyncAsset(isDocumentNode(documentOrAsyncDocument)
        ? undefined
        : documentOrAsyncDocument.resolver.id);
    return document;
}
exports.default = useGraphQLDocument;
function isDocumentNode(arg) {
    return Boolean(arg && arg.kind && arg.kind === 'Document');
}
