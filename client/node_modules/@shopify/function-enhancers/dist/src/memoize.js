"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
exports.MAX_MAP_ENTRIES = 50;
function memoize(method, resolver) {
    var weakMapCache = new WeakMap();
    var mapCache = new Map();
    var mapKeys = [];
    return function memoized() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (typeof window === 'undefined') {
            return method.apply(this, args);
        }
        var useWeakMap = args.length === 1 && typeof args[0] === 'object' && !resolver;
        var key;
        if (useWeakMap) {
            key = args[0];
        }
        else if (resolver && resolver instanceof Function) {
            key = resolver.apply(void 0, tslib_1.__spread(args));
        }
        else {
            key = args[0];
        }
        var cache = useWeakMap ? weakMapCache : mapCache;
        if (cache.has(key)) {
            return cache.get(key);
        }
        var result = method.apply(this, args);
        if (useWeakMap) {
            weakMapCache.set(key, result);
        }
        else {
            mapCache.set(key, result);
            mapKeys.push(key);
            if (mapCache.size > exports.MAX_MAP_ENTRIES) {
                var oldestKey = mapKeys[0];
                mapCache.delete(oldestKey);
                mapKeys.shift();
            }
        }
        return result;
    };
}
exports.default = memoize;
