"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var jest_dom_mocks_1 = require("@shopify/jest-dom-mocks");
var is_less_than_one_year_away_1 = require("../is-less-than-one-year-away");
describe('isLessThanOneYearAway()', function () {
    it('returns false for dates in the past', function () {
        var now = new Date();
        var other = new Date(now.getTime());
        other.setFullYear(now.getFullYear() - 1);
        expect(is_less_than_one_year_away_1.isLessThanOneYearAway(other, now)).toBe(false);
    });
    it('returns false for dates more than one year apart', function () {
        var now = new Date();
        var other = new Date(now.getTime());
        other.setDate(now.getDate() + 366);
        expect(is_less_than_one_year_away_1.isLessThanOneYearAway(other, now)).toBe(false);
    });
    it('returns false for dates exactly one year apart', function () {
        var now = new Date();
        var other = new Date(now.getTime());
        other.setDate(now.getDate() + 365);
        expect(is_less_than_one_year_away_1.isLessThanOneYearAway(other, now)).toBe(false);
    });
    it('returns true for dates less than one year apart', function () {
        var now = new Date();
        var other = new Date(now.getTime());
        other.setDate(now.getDate() + 364);
        expect(is_less_than_one_year_away_1.isLessThanOneYearAway(other, now)).toBe(true);
    });
    describe('Daylight Saving Time', function () {
        afterEach(function () {
            jest_dom_mocks_1.clock.restore();
        });
        it('returns true when crossing spring forward DST boundary', function () {
            jest_dom_mocks_1.clock.mock(new Date('2018-03-25T02:00:00.000+01:00'));
            var date = new Date('2018-03-25T03:00:00.000+02:00');
            expect(is_less_than_one_year_away_1.isLessThanOneYearAway(date)).toBe(true);
        });
        it('returns true when crossing fall back DST boundary', function () {
            jest_dom_mocks_1.clock.mock(new Date('2017-10-29T03:00:00.000+02:00'));
            var date = new Date('2017-10-29T02:00:00.000+01:00');
            expect(is_less_than_one_year_away_1.isLessThanOneYearAway(date)).toBe(true);
        });
    });
});
